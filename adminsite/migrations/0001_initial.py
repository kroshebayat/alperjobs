# Generated by Django 4.0.3 on 2022-04-01 20:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phoneNumber', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExtraFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=30)),
                ('province', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=200)),
                ('userActiveStatus', models.BooleanField(default=False)),
                ('emailConfirmation', models.BooleanField(default=False)),
                ('balance', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('1', 'Bronze'), ('2', 'Silver'), ('3', 'Gold')], max_length=1)),
                ('companyName', models.CharField(max_length=60)),
                ('companySize', models.CharField(choices=[('1', '0-10'), ('2', '10-20'), ('3', '20-50'), ('4', '50-100'), ('5', '+100')], max_length=1)),
                ('companyEstablished', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='JobPositions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobTitle', models.CharField(max_length=200)),
                ('jobCreatedDateTime', models.DateTimeField()),
                ('jobExpiration', models.DateField()),
                ('jobDesctiption', models.TextField()),
                ('jobSkils', models.TextField()),
                ('jobAppliedsCounter', models.CharField(max_length=5)),
                ('jobAppliedUsers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_jobAppliedUsers', to=settings.AUTH_USER_MODEL)),
                ('jobCreator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('mainPicture', models.ImageField(upload_to='')),
                ('dateTime', models.DateTimeField()),
                ('condition', models.CharField(choices=[('1', 'Published'), ('2', 'UnPublished'), ('3', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='exteraField',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='adminsite.extrafields'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
